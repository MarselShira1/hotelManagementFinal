@using hotelManagement.Domain.Models;
@using hotelManagement.DAL.Persistence.Entities;
@model IEnumerable<CreateRoom>
@{
    Layout = "~/Views/Shared/_LandingPageLayout.cshtml";
}

@* <script> *@
@*     // Use Razor to set a JS flag based on whether the user is authenticated. *@
@*     var isLoggedIn = '@User.Identity.IsAuthenticated'.toLowerCase() === 'true'; *@
@* </script> *@
<section class="site-hero inner-page overlay" style="background-image: url(/css/hero_4.jpg)" data-stellar-background-ratio="0.5">
    <div class="container">
        <div class="row site-hero-inner justify-content-center align-items-center">
            <div class="col-md-10 text-center" data-aos="fade">
                <h1 class="heading mb-3">Rooms</h1>
                <ul class="custom-breadcrumbs mb-4">
                    <li><a href="@Url.Action("Index", "LandingPage")">Home</a></li>
                    <li>&bullet;</li>
                    <li>Rooms</li>
                </ul>
            </div>
        </div>
    </div>
    <a class="mouse smoothscroll" href="#next">
        <div class="mouse-icon">
            <span class="mouse-wheel"></span>
        </div>
    </a>
</section>

<section class="section pb-4">
    <div class="container">
        <div class="row check-availabilty" id="next">
            <div class="block-32" data-aos="fade-up" data-aos-offset="-200">
                <form action="#">
                    <div class="row">
                        <div class="col-md-6 mb-3 mb-lg-0 col-lg-3">
                            <label for="checkin_date" class="font-weight-bold text-black">Check In</label>
                            <div class="field-icon-wrap">
                                <div class="icon"><span class="icon-calendar"></span></div>
                                <input type="text" id="checkin_date" class="form-control">
                            </div>
                        </div>
                        <div class="col-md-6 mb-3 mb-lg-0 col-lg-3">
                            <label for="checkout_date" class="font-weight-bold text-black">Check Out</label>
                            <div class="field-icon-wrap">
                                <div class="icon"><span class="icon-calendar"></span></div>
                                <input type="text" id="checkout_date" class="form-control">
                            </div>
                        </div>
                        <div class="col-md-6 mb-3 mb-md-0 col-lg-3">
                            <div class="row">
                                <div class="col-md-6 mb-3 mb-md-0">
                                    <label for="adults" class="font-weight-bold text-black">Adults</label>
                                    <div class="field-icon-wrap">
                                        <div class="icon"><span class="ion-ios-arrow-down"></span></div>
                                        <select id="adults" class="form-control">
                                            <option value="1">1</option>
                                            <option value="2">2</option>
                                            <option value="3">3</option>
                                            <option value="4">4+</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-6 mb-3 mb-md-0">
                                    <label for="children" class="font-weight-bold text-black">Children</label>
                                    <div class="field-icon-wrap">
                                        <div class="icon"><span class="ion-ios-arrow-down"></span></div>
                                        <select id="children" class="form-control">
                                            <option value="0">0</option>
                                            <option value="1">1</option>
                                            <option value="2">2</option>
                                            <option value="3">3</option>
                                            <option value="4">4+</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 col-lg-3 align-self-end">
                            <button class="btn btn-primary btn-block text-white" onclick="checkAvailability(event)">Check Availabilty</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</section>

<section class="section">
    <div class="container" id="room_list">
        @foreach (CreateRoom el in Model)
        {
            <div class="row">
                <div class="col-md-6 col-lg-4 mb-5" data-aos="fade-up">
                    <a class="room">
                        <figure class="img-wrap">
                            <img src="/css/img_1.jpg" class="img-fluid mb-3">
                        </figure>
                        <div class="p-3 text-center room-info">
                            <h2>@el.RoomNumber</h2>
                            <span class="text-uppercase letter-spacing-1">
                                @el.Price $ / per night
                            </span>
                            @* <span class="text-uppercase letter-spacing-1">@el.Capacity persona</span> *@
                            <button class="btn btn-primary book-room-btn"
                                    data-room-id="@el.RoomId"
                                    data-room-name="@el.RoomNumber">
                                Book Now
                            </button>
                        </div>
                    </a>
                </div>
            </div>
        }
        }
    </div>
</section>

<section class="section bg-image overlay" style="background-image: url('/css/hero_4.jpg');">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-12 col-md-6 text-center mb-4 mb-md-0 text-md-left" data-aos="fade-up">
                <h2 class="text-white font-weight-bold">The Best Place To Stay. Reserve Now!</h2>
            </div>
            <div class="col-12 col-md-6 text-center text-md-right" data-aos="fade-up" data-aos-delay="200">
                <a href="@Url.Action("Reservations", "LandingPage")" class="btn btn-outline-white-primary py-3 text-white px-5">
                    Reserve Now
                </a>
            </div>
        </div>
    </div>
</section>

<!-- Create Booking Modal -->
<div class="modal fade" id="bookingModal" tabindex="-1" role="dialog" aria-labelledby="bookingModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Book Room: <span id="modalRoomName"></span></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="bookingForm">
                    <input type="hidden" name="RoomId" id="RoomId" />

                    <!-- Step 1: Personal Details -->
                    <div class="form-step" id="step-1">
                        <h4>Step 1: Personal Details</h4>
                        <div class="form-group">
                            <label for="customerName">Full Name</label>
                            <input type="text" class="form-control" id="customerName" name="CustomerName" readonly value="@ViewBag.UserName" />
                        </div>
                        <div class="form-group">
                            <label for="email">Email Address</label>
                            <input type="email" class="form-control" id="email" name="Email" readonly value="@ViewBag.UserEmail" />
                        </div>
                        <button type="button" class="btn btn-primary next-step">Next</button>
                    </div>

                    <div class="form-step d-none" id="step-2">
                        <h4>Step 2: Booking Details</h4>
                        <div class="form-group">
                            <label for="checkin">Check In</label>
                            <input type="date" class="form-control" id="checkin" name="CheckIn" required />
                        </div>
                        <div class="form-group">
                            <label for="checkout">Check Out</label>
                            <input type="date" class="form-control" id="checkout" name="CheckOut" required />
                        </div>

                        <div class="form-group">
                            <label for="roomRate">Select Room Rate</label>
                            @{
                                var roomRates = ViewBag.RoomRates as List<RoomRate> ?? new List<RoomRate>();
                            }

                            <select class="form-control" id="roomRate" name="RoomRateId" required>
                                @if (roomRates.Count > 0)
                                {
                                    @foreach (var rate in roomRates)
                                    {
                                        <option value="@rate.Id">@rate.Emer</option>
                                    }
                                }
                                else
                                {
                                    <option disabled>No room rates available</option>
                                }
                            </select>
                        </div>

                        <button type="button" class="btn btn-secondary prev-step">Previous</button>
                        <button type="button" class="btn btn-primary next-step">Next</button>
                    </div>

                    <div class="form-step d-none" id="step-3">
                        <h4>Step 3: Confirm Booking</h4>
                        <p>Please review your details before submitting.</p>
                        <div id="bookingSummary"></div>
                        <button type="button" class="btn btn-secondary prev-step">Previous</button>
                        <button type="button" class="btn btn-primary next-step">Next</button>
                    </div>

                    <div class="form-step d-none" id="step-4">
                        <h2>Invoice Preview</h2>

               

                        <iframe id="pdfPreview" width="100%" height="600px"></iframe>
                        <br />
                      

                        <button type="button" class="btn btn-secondary prev-step">Previous</button>
                        <button type="submit" class="btn btn-success">Confirm Payment</button>

                    </div>

                </form>
                
            </div>
        </div>
    </div>
</div>
@if (ViewBag.PaymentSuccess != null && ViewBag.PaymentSuccess == true)
{
    <div aria-live="polite" aria-atomic="true" class="position-relative">
        <div id="toastContainer" class="toast-container position-fixed top-0 end-0 p-3">
            <div id="paymentToast" class="toast text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">
                        Payment was successful! Your booking has been confirmed.
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        </div>
    </div>
}



<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<script>
    let selectedRoomId = null;
            document.addEventListener("DOMContentLoaded", function () {
            let paymentToast = document.getElementById("paymentToast");
            if (paymentToast) {
                let toast = new bootstrap.Toast(paymentToast);
                toast.show();
            }
        });
    $(document).ready(function () {
        const userId = "@ViewBag.UserId".trim() !== "" ? "@ViewBag.UserId" : null;


        console.log("User id = "+ userId);

        // Open Booking Modal
        $('.book-room-btn').on('click', function () {
             if (!userId || userId === "null" || userId === "undefined") {
            alert("You need to log in to book a room.");
           
            return;
        }
            selectedRoomId = $(this).data('room-id');
            let roomName = $(this).data('room-name');

            $('#modalRoomName').text(roomName);
            $('#RoomId').val(selectedRoomId);

            $('#bookingForm')[0].reset();
            $('.form-step').addClass('d-none');
            $('#step-1').removeClass('d-none');

            loadRoomRates(selectedRoomId);

            $('#bookingModal').modal('show');
        });

        $('.next-step').on('click', function () {
            const currentStep = $(this).closest('.form-step');
            const nextStep = currentStep.next('.form-step');

            currentStep.addClass('d-none');
            nextStep.removeClass('d-none');

            if (nextStep.attr('id') === 'step-3') {
                calculatePrice();
                updateBookingSummary();
            }
            debugger
            if (nextStep.attr('id') === 'step-4') {
                previewBill();
            }
        });

        $('.prev-step').on('click', function () {
            const currentStep = $(this).closest('.form-step');
            const prevStep = currentStep.prev('.form-step');

            currentStep.addClass('d-none');
            prevStep.removeClass('d-none');
        });

        // $('#checkin, #checkout, #roomRate').on('change', calculatePrice);

        function loadRoomRates(selectedRoomId) {
            $.ajax({
                type: "GET",
                url: '/RoomRate/GetAllRoomRates',
                data: {roomId: selectedRoomId},
                success: function (roomRates) {
                    //console.log("Room rates received:", roomRates);

                    const roomRateSelect = $('#roomRate');
                    roomRateSelect.empty();

                    if (roomRates && roomRates.length > 0) {
                        roomRates.forEach(rate => {
                            roomRateSelect.append(new Option(rate.emer, rate.id));
                        });
                    } else {
                        roomRateSelect.append(new Option('No room rates available', ''));
                    }
                },
                error: function () {
                    alert('Failed to load room rates.');
                }
            });
        }

        async function calculatePrice() {
            debugger
            const roomRateId = $('#roomRate').val();
            const checkIn = $('#checkin').val();
            const checkOut = $('#checkout').val();

        if (!roomRateId || !checkIn || !checkOut) return;
        debugger
        const requestData = {
            roomRateId: parseInt(roomRateId),
            checkIn: checkIn,
            checkOut: checkOut,
            //roomId: selectedRoomId,
            userId: userId
        };

        // Log the request data before sending it
        console.log("Request Data:", requestData);

            try {
                const response = await fetch('/Booking/CalculatePrice', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        roomRateId: parseInt(roomRateId),
                        checkIn: checkIn,
                        checkOut: checkOut,
                        roomId: selectedRoomId,
                        userId: userId
                    })
                });

                if (response.ok) {
                    const result = await response.json();
                    if ($('#totalPrice').length === 0) {

                        // $('#step-3').prepend('<p><strong>Total Price: </strong><span id="totalPrice"></span></p>');
                    }
                        $('#totalPrice').text(`$${result.totalPrice}`);

                    // $('#totalPrice').text(`$${result.totalPrice}`);
                }
            } catch (error) {
                console.error('Error calculating price:', error);
            }
        }

        function updateBookingSummary() {
           $('#bookingSummary').html(`
        <p><strong>Name:</strong> ${$('#customerName').val()}</p>
        <p><strong>Email:</strong> ${$('#email').val()}</p>
        <p><strong>Check In:</strong> ${$('#checkin').val()}</p>
        <p><strong>Check Out:</strong> ${$('#checkout').val()}</p>
        <p>Total Price:<strong id = "totalPrice"</strong></p>
    `);
        }

                  $('#bookingForm').on('submit', function (e) {
        e.preventDefault();

        // Create a hidden form dynamically
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = '/Booking/CreateCheckoutSession'; // Your controller endpoint

        // Add required fields as hidden inputs
        const bookingData = {
            roomId: selectedRoomId,
            roomRateId: parseInt($('#roomRate').val()),
            userId: userId,
            checkIn: $('#checkin').val(),
            checkOut: $('#checkout').val(),
            price: parseFloat($('#totalPrice').text().replace('$', ''))
        };

        for (const key in bookingData) {
            const input = document.createElement('input');
            input.type = 'hidden';
            input.name = key;
            input.value = bookingData[key];
            form.appendChild(input);
        }

        // Append form to body and submit it
        document.body.appendChild(form);
        form.submit();
    });

        $(document).on('click', '.close', function () {
        console.log("Closing modal via close button.");
        $('#bookingModal').modal('hide');
    });
    });

    function checkAvailability(event) {
        event.preventDefault();
        const checkinDate = document.getElementById("checkin_date").value;
        const checkoutDate = document.getElementById("checkout_date").value;
        const adults = document.getElementById("adults").value;
        const children = document.getElementById("children").value;
        const params = new URLSearchParams({
            checkinDate,
            checkoutDate,
            adults,
            children
        }).toString();
        fetch(`/LandingPage/CheckAvailability?${params}`, {
            method: "GET",
            headers: {
                "Content-Type": "application/json"
            }
        })
        .then(response => response.json())
        .then(data => {
            const roomList = document.getElementById("room_list");
            roomList.innerHTML = "";
            data.forEach(room => {
                const roomElement = document.createElement("div");
                roomElement.classList.add("col-md-6", "col-lg-4", "mb-5");
                roomElement.setAttribute("data-aos", "fade-up");
                const roomLink = document.createElement("a");
                roomLink.href = "#";
                roomLink.classList.add("room");
                const imgWrap = document.createElement("figure");
                imgWrap.classList.add("img-wrap");
                const img = document.createElement("img");
                img.src = "/css/img_1.jpg";
                img.classList.add("img-fluid", "mb-3");
                imgWrap.appendChild(img);
                roomLink.appendChild(imgWrap);
                const roomInfo = document.createElement("div");
                roomInfo.classList.add("p-3", "text-center", "room-info");
                const roomName = document.createElement("h2");
                roomName.innerText = room.Emer;
                const roomRate = document.createElement("span");
                roomRate.classList.add("text-uppercase", "letter-spacing-1");
                roomRate.innerText = `${room.Kapacitet} person`;
                roomInfo.appendChild(roomName);
                roomInfo.appendChild(roomRate);
                roomLink.appendChild(roomInfo);
                roomElement.appendChild(roomLink);
                roomList.appendChild(roomElement);
            });
        })
        .catch(error => {
            console.error("Error fetching availability:", error);
        });
    }

    // preview bill
    function previewBill() {
        debugger
    const roomRateId = $('#roomRate').val();
    const checkIn = $('#checkin').val();
    const checkOut = $('#checkout').val();
     const totalPrice = parseFloat($('#totalPrice').text().replace('$', ''));
    // const selectedRoomId = $(this).data('room-id');
        const billDto = {
        roomId: selectedRoomId,
        roomRateId: roomRateId,
        CheckIn: checkIn,
        CheckOut: checkOut,
        totalPrice: totalPrice
    };
         debugger
      // Send the DTO via a POST request
    fetch("/Room/GetBillPdf", {
        method: "POST", // Change to POST since you are sending data
        headers: {
            "Content-Type": "application/json"
        },
        body: JSON.stringify(billDto) // Pass DTO as the request body
    })
    .then(response => response.json())
    .then(data => {
        const pdfFrame = document.getElementById("pdfPreview");
        pdfFrame.src = "data:application/pdf;base64," + data.pdfData;
        document.getElementById("downloadLink").href = "data:application/pdf;base64," + data.pdfData;
    })
    .catch(error => console.error("Error loading the bill:", error));
}
</script>

