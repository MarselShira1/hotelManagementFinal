@using hotelManagamentFinal.Models.DTO
@model RoomViewModel

<div class="text-center">
    <h1 class="display-4">Rooms</h1>
    <button type="button" id="addNew" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addRoomModal">+</button>
</div>

<div class="modal fade" id="editRoomModal" tabindex="-1" aria-labelledby="editRoomLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Room</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editRoomForm">
                    @Html.AntiForgeryToken()
                    
                    <input type="hidden" id="editRoomId" name="RoomId" />
                    <div class="mb-3">
                        <label for="EditRoom_RoomTypeId" class="form-label">Choose room type</label>
                        
                        <select id="EditRoom_RoomTypeId" name="RoomTypeId" class="form-select" required>
                            <option value="">Select Room Type</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="editRoomFloor" class="form-label">Room Floor</label>
                        <input type="number" id="editRoomFloor" name="RoomFloor" class="form-control" />
                    </div>
                    <div class="mb-3">
                        <label for="editRoomNumber" class="form-label">Room Number</label>
                        <input type="text" id="editRoomNumber" name="RoomNumber" class="form-control" />
                    </div>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="addRoomModal" tabindex="-1" aria-labelledby="addRoomLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Room</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="roomForm">
                    @Html.AntiForgeryToken()
                    <div class="mb-3">
                        <label for="NewRoom_RoomTypeId" class="form-label">Choose room type</label>
                        
                        <select id="NewRoom_RoomTypeId" name="RoomTypeId" class="form-select" required>
                            <option value="">Select Room Type</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="NewRoom_room_floor" class="form-label">Room Floor:</label>
                        <input id="NewRoom_room_floor" name="RoomFloor" class="form-control" />
                    </div>
                    <div class="mb-3">
                        <label for="NewRoom_room_number" class="form-label">Room Number:</label>
                        <input id="NewRoom_room_number" name="RoomNumber" class="form-control" />
                    </div>
                    <button type="submit" id="submitButton" class="btn btn-primary">Submit</button>
                </form>
            </div>
        </div>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>Room Type</th>
            <th>Floor</th>
            <th>Room Number</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="roomsTableBody">
        
    </tbody>
</table>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    let allRooms = [];
    let RoomTypes = [];

    $(document).ready(function () {
        loadRoomData();
        loadRoomTypes();

        $('#roomForm').submit(function (event) {
            event.preventDefault();
            var roomTypeId = $('#NewRoom_RoomTypeId').val();
            var roomFloor = $('#NewRoom_room_floor').val();
            var roomNumber = $('#NewRoom_room_number').val();

            $.ajax({
                type: "POST",
                url: '@Url.Action("CreateRoomSql", "Room")',
                data: {
                    RoomTypeId: roomTypeId,
                    RoomFloor: roomFloor,
                    RoomNumber: roomNumber
                },
                success: function (response) {
                    if (response.success) {
                        alert('Room saved successfully.');
                        $('#addRoomModal').modal('hide');
                        loadRoomData();
                    } else {
                        alert('Failed to save room: ' + (response.errors ? response.errors.join(', ') : 'Unknown error'));
                    }
                },
                error: function () {
                    alert('An error occurred while saving the room.');
                }
            });
        });

        $('#editRoomForm').submit(function (event) {
            event.preventDefault();
            var roomId = $('#editRoomId').val();
            var roomTypeId = $('#EditRoom_RoomTypeId').val();
            var roomFloor = $('#editRoomFloor').val();
            var roomNumber = $('#editRoomNumber').val();

            $.ajax({
                type: "POST",
                url: '@Url.Action("CreateRoomSql", "Room")',
                data: {
                    RoomId: roomId,
                    RoomTypeId: roomTypeId,
                    RoomFloor: roomFloor,
                    RoomNumber: roomNumber
                },
                success: function (response) {
                    if (response.success) {
                        alert('Room updated successfully.');
                        $('#editRoomModal').modal('hide');
                        loadRoomData();
                    } else {
                        alert('Failed to update room: ' + (response.errors ? response.errors.join(', ') : 'Unknown error'));
                    }
                },
                error: function () {
                    alert('An error occurred while updating the room.');
                }
            });
        });
    });

    function loadRoomData() {
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetRoomList", "Room")',
            success: function (rooms) {
                allRooms = rooms;
                renderTable();
            },
            error: function () {
                alert('Failed to load room data.');
            }
        });
    }

    function loadRoomTypes() {
        $.ajax({
            type: "GET",
            url: '/RoomType/GetAllRoomTypes',
            success: function (response) {
                RoomTypes = response;
                populateRoomTypeDropdown("NewRoom_RoomTypeId");
            },
            error: function () {
                alert('Failed to load room types.');
            }
        });
    }

    function populateRoomTypeDropdown(dropdownId) {
        var dropdown = $(`#${dropdownId}`);
        dropdown.empty();
        dropdown.append('<option value="">Select Room Type</option>');
        if (RoomTypes && RoomTypes.roomTypes) {
            RoomTypes.roomTypes.forEach(function (roomType) {
                dropdown.append(`<option value="${roomType.id}">${roomType.emer}</option>`);
            });
        }
    }

    function populateEditModal(data) {
        $('#editRoomId').val(data.id);
        var dropdown = $('#EditRoom_RoomTypeId');
        dropdown.empty();
        dropdown.append('<option value="">Select Room Type</option>');
        if (RoomTypes && RoomTypes.roomTypes) {
            RoomTypes.roomTypes.forEach(function (roomType) {
                dropdown.append(`<option value="${roomType.id}">${roomType.emer}</option>`);
            });
            dropdown.val(data.roomTypeId);
        }
        $('#editRoomFloor').val(data.roomFloor);
        $('#editRoomNumber').val(data.roomNumber);
    }

    function renderTable() {
        var tbody = $("#roomsTableBody");
        tbody.empty();
        allRooms.forEach(function (room) {
            var row = `
                <tr>
                    <td>${room.roomTypeName}</td>
                    <td>${room.roomFloor}</td>
                    <td>${room.roomNumber}</td>
                    <td>
                        <button type="button" class="btn btn-warning btn-sm" data-bs-toggle="modal"
                                data-bs-target="#editRoomModal"
                                onclick="populateEditModal({
                                    id: '${room.roomId}',
                                    roomTypeId: '${room.roomTypeId ? room.roomTypeId : 0}',
                                    roomNumber: '${room.roomNumber}',
                                    roomFloor: '${room.roomFloor}'
                                })">
                            <i class="fas fa-edit"></i> Edit
                        </button>
                        <button type="button" class="btn btn-danger btn-sm delete-button" data-room-id="${room.roomId}">
                            <i class="fas fa-trash"></i> Delete
                        </button>
                    </td>
                </tr>`;
            tbody.append(row);
        });
    }

    $(document).on('click', '.delete-button', function () {
        const roomId = $(this).data('room-id');
        if (confirm('Are you sure you want to delete this room?')) {
            $.ajax({
                type: 'POST',
                url: '/Room/DeleteRoom',
                data: { id: roomId },
                success: function (response) {
                    if (response.success) {
                        alert('Room deleted successfully.');
                        loadRoomData();
                    } else {
                        alert('Failed to delete room: ' + response.message);
                    }
                },
                error: function () {
                    alert('An error occurred while trying to delete the room.');
                }
            });
        }
    });
</script>
